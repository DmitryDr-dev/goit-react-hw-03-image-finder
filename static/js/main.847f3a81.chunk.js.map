{"version":3,"sources":["components/Searchbar/Searchbar.jsx","services/pixabay-api.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["Searchbar","handleInputChange","e","setState","query","currentTarget","value","handleFormSubmit","preventDefault","state","props","clearState","trim","toast","error","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","PixabayApi","searchQuery","pageNumber","qtyPerPage","newSearchQuery","newPage","a","url","fetch","response","json","imageArr","console","log","message","ImageGalleryItem","smallImageUrl","largeImageUrl","imgDescription","onImageClick","src","alt","onClick","modalRoot","document","querySelector","Modal","keyboardManipulation","onClose","imgArr","activeIndex","findIndex","image","largeImageURL","code","length","changeImage","handleBackdropClick","target","window","addEventListener","removeEventListener","index","tags","createPortal","Button","LoaderComponent","color","height","width","timeout","pixabayApi","Status","ImageGallery","imageClickHandler","imageAlt","toggleModal","renderImages","fetchImages","then","fetchedImages","hits","prevState","imageArray","status","smoothScrolling","showModal","loadMoreBtnClickHandler","page","prevProps","prevQuery","newQuery","scrollTo","top","documentElement","scrollHeight","behavior","map","id","webformatURL","App","formSubmitHandler","autoClose","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.847f3a81.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport './Searchbar.css';\r\nclass Searchbar extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      query: '',\r\n    };\r\n  }\r\n\r\n  // function to track changes on input\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      query: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  // function to submit form\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      state: { query },\r\n      props,\r\n      clearState,\r\n    } = this;\r\n\r\n    if (query.trim() === '') {\r\n      return toast.error('Please enter the search query!');\r\n    }\r\n\r\n    props.onSubmit(query);\r\n\r\n    clearState();\r\n  };\r\n\r\n  // function to clear state\r\n  clearState = () => {\r\n    this.setState({\r\n      query: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      state: { query },\r\n      handleInputChange,\r\n      handleFormSubmit,\r\n    } = this;\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={query}\r\n            onChange={handleInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","export class PixabayApi {\n  #BASE_URL = 'https://pixabay.com/api/?';\n  #API_KEY = '23203162-5bd4fce9443c3feba1bdcfdd5';\n\n  constructor() {\n    this.searchQuery = '';\n    this.pageNumber = 1;\n    this.qtyPerPage = 12;\n  }\n\n  // searchQuery getter\n  get query() {\n    return this.searchQuery;\n  }\n\n  // searchQuery setter\n  set query(newSearchQuery) {\n    this.searchQuery = newSearchQuery;\n  }\n\n  get page() {\n    return this.pageNumber;\n  }\n\n  set page(newPage) {\n    this.pageNumber = newPage;\n  }\n\n  async fetchImages() {\n    const url = `${this.#BASE_URL}q=${this.searchQuery}&page=${\n      this.pageNumber\n    }&key=${this.#API_KEY}&image_type=photo&orientation=horizontal&per_page=${\n      this.qtyPerPage\n    }`;\n\n    try {\n      const response = await fetch(url);\n      const imageArr = await response.json();\n      return imageArr;\n    } catch (error) {\n      console.log(\"Something's wrong\", error?.message);\n    }\n  }\n}\n","import PropTypes from 'prop-types';\r\n\r\nimport './ImageGalleryItem.css';\r\n\r\nfunction ImageGalleryItem({\r\n  smallImageUrl,\r\n  largeImageUrl,\r\n  imgDescription,\r\n  onImageClick,\r\n}) {\r\n  return (\r\n    <img\r\n      src={smallImageUrl}\r\n      alt={imgDescription}\r\n      className=\"ImageGalleryItem-image\"\r\n      onClick={() => {\r\n        onImageClick(largeImageUrl, imgDescription);\r\n      }}\r\n      data-source={largeImageUrl}\r\n    />\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  smallImageUrl: PropTypes.string.isRequired,\r\n  largeImageUrl: PropTypes.string.isRequired,\r\n  imgDescription: PropTypes.string.isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Modal.css';\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      url: this.props?.url,\r\n      alt: this.props?.alt,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.keyboardManipulation);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.keyboardManipulation);\r\n  }\r\n\r\n  // function to update state on keyboard manipulation\r\n  changeImage(index) {\r\n    this.setState({\r\n      url: this.props.imgArr[index].largeImageURL,\r\n      alt: this.props.imgArr[index].tags,\r\n    });\r\n  }\r\n\r\n  // function to close modal on ESC press & to switch images when modal is opened\r\n  keyboardManipulation = e => {\r\n    const { onClose, imgArr } = this.props;\r\n    let activeIndex = imgArr.findIndex(\r\n      image => image?.largeImageURL === this.state.url,\r\n    );\r\n\r\n    switch (e.code) {\r\n      case 'Escape':\r\n        onClose();\r\n        break;\r\n      case activeIndex === imgArr.length - 1 && 'ArrowRight':\r\n        activeIndex = 0;\r\n        this.changeImage(activeIndex);\r\n        break;\r\n      case activeIndex < imgArr.length - 1 && 'ArrowRight':\r\n        activeIndex += 1;\r\n        this.changeImage(activeIndex);\r\n        break;\r\n      case activeIndex === 0 && 'ArrowLeft':\r\n        activeIndex = imgArr.length - 1;\r\n        this.changeImage(activeIndex);\r\n        break;\r\n      case activeIndex > 0 && 'ArrowLeft':\r\n        activeIndex -= 1;\r\n        this.changeImage(activeIndex);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.target !== e.currentTarget) {\r\n      return;\r\n    }\r\n\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    const { url, alt } = this.state;\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={url} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  alt: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  imgArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Modal;\r\n","import './Button.css';\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './Loader.css';\r\n\r\nexport default class LoaderComponent extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Bars\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport './ImageGallery.css';\r\n// component import\r\nimport { PixabayApi } from '../../services';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Modal from '../Modal/';\r\nimport Button from '../Button';\r\nimport LoaderComponent from '../Loader';\r\n\r\nconst pixabayApi = new PixabayApi();\r\n\r\n// state machine\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nclass ImageGallery extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      imageArray: [],\r\n      status: Status.IDLE,\r\n      showModal: false,\r\n      largeImageUrl: '',\r\n      imageAlt: '',\r\n    };\r\n  }\r\n\r\n  // function to change state status & invoke new images fetch on new props / state\r\n  componentDidUpdate(prevProps) {\r\n    const prevQuery = prevProps?.query;\r\n    const newQuery = this.props?.query;\r\n\r\n    if (prevQuery !== newQuery) {\r\n      this.setState({ status: Status.PENDING });\r\n\r\n      try {\r\n        pixabayApi.page = 1;\r\n        pixabayApi.query = newQuery;\r\n        this.setState({\r\n          imageArray: [],\r\n        });\r\n        this.renderImages();\r\n      } catch (error) {\r\n        this.setState({ status: Status.REJECTED });\r\n        console.log(\"Okay, Houston, we've got a problem here\", error.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  // function to update activeIndex by click on image\r\n  imageClickHandler = (url, alt) => {\r\n    this.setState({\r\n      largeImageUrl: url,\r\n      imageAlt: alt,\r\n    });\r\n\r\n    this.toggleModal();\r\n  };\r\n\r\n  // function to fetch images & update current state\r\n  renderImages = () => {\r\n    try {\r\n      pixabayApi.fetchImages().then(fetchedImages => {\r\n        // alert on empty arrays\r\n        if (fetchedImages.hits.length === 0) {\r\n          toast.error('Nothing found! Please enter the correct query!');\r\n          return;\r\n        }\r\n\r\n        this.setState(prevState => {\r\n          return {\r\n            imageArray: [...prevState.imageArray, ...fetchedImages.hits],\r\n            status: Status.RESOLVED,\r\n          };\r\n        });\r\n\r\n        // smooth scrolling\r\n        this.smoothScrolling();\r\n      });\r\n    } catch (error) {\r\n      this.setState({ status: Status.REJECTED });\r\n      console.log(\"Okay, Houston, we've got a problem here\", error.message);\r\n    }\r\n  };\r\n\r\n  // function to toggle modal\r\n  toggleModal = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        showModal: !prevState.showModal,\r\n      };\r\n    });\r\n  };\r\n\r\n  // function to render more images by click on load more button\r\n  loadMoreBtnClickHandler = () => {\r\n    try {\r\n      pixabayApi.page += 1;\r\n      this.renderImages();\r\n    } catch (error) {\r\n      this.setState({ status: Status.REJECTED });\r\n      console.log(\"Okay, Houston, we've got a problem here:\", error.message);\r\n    }\r\n  };\r\n\r\n  smoothScrolling() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      state: { imageArray, status, showModal, imageAlt, largeImageUrl },\r\n      imageClickHandler,\r\n      toggleModal,\r\n      loadMoreBtnClickHandler,\r\n    } = this;\r\n\r\n    switch (status) {\r\n      case 'idle':\r\n        return null;\r\n      case 'pending':\r\n        return <LoaderComponent />;\r\n      case 'resolved':\r\n        return (\r\n          <>\r\n            <ul className=\"ImageGallery\">\r\n              {imageArray.map(({ id, largeImageURL, webformatURL, tags }) => {\r\n                return (\r\n                  <li key={id} className=\"ImageGalleryItem\">\r\n                    <ImageGalleryItem\r\n                      largeImageUrl={largeImageURL}\r\n                      smallImageUrl={webformatURL}\r\n                      imgDescription={tags}\r\n                      onImageClick={imageClickHandler}\r\n                    />\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n\r\n            {showModal && (\r\n              <Modal\r\n                alt={imageAlt}\r\n                url={largeImageUrl}\r\n                onClose={toggleModal}\r\n                imgArr={imageArray}\r\n              />\r\n            )}\r\n\r\n            {imageArray.length !== 0 && (\r\n              <div className=\"Button-wrap\">\r\n                <Button onClick={loadMoreBtnClickHandler} />\r\n              </div>\r\n            )}\r\n          </>\r\n        );\r\n      case 'rejected':\r\n        return toast.error(\r\n          \"Okay, Houston, we've got a problem here. Please try again later\",\r\n        );\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.css';\n// component import\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      searchQuery: '',\n    };\n  }\n\n  // function to update App state on Form submit\n  formSubmitHandler = newQuery => {\n    this.setState({ searchQuery: newQuery });\n  };\n\n  render() {\n    const {\n      state: { searchQuery },\n      formSubmitHandler,\n    } = this;\n\n    return (\n      <>\n        <Searchbar onSubmit={formSubmitHandler} />\n        <ImageGallery query={searchQuery} />\n        <ToastContainer autoClose={3000} position=\"top-right\" />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}